>>VMware Workstation虚拟机
通过该软件在windows系统上安装Linux;
需要查看是否开启了CPU虚拟化, 查看方法: 任务管理器 -> 性能 -> 虚拟化, 如果没有开启需要先开启;
开启CPU虚拟化: BIOS -> config -> Virtualization -> Enabled;
然后通过VMware来安装CentOS;


>>挂载(mount)
1, 硬盘基础知识
1)硬盘最多包括4个主分区, 1个扩展分区(主分区加扩展分区最多有4个), 扩展分区只能包含
逻辑分区, 划分成逻辑分区后才能写入数据;
主分区和扩展分区使用1、2、3、4进行编号, 逻辑分区的编号从5开始;
2)硬盘在写数据前要进行格式化, 在分区中划出一片用于存放文件分配表, 包含文件的id号, 以及
文件放在硬盘的哪些block块中;
3)IDE硬盘接口和SCSI硬盘接口已过时, 目前主流是SATA硬盘接口;
2, 挂载
1)Linux中的一切皆文件, 每个硬件设备都有设备文件名, 如/dev/sda1, /dev表示硬件设备, sd表示
SATA硬盘, a表示第一块硬盘, 1表示第一个分区;
2)挂载点: 即文件名, 如/dev/sda1。把硬件设备绑定到指定挂载点上, 就称为挂载;
3)挂载命令
lsblk [-f]  //查看整体硬盘分区的挂载情况
mount [-l]	//显示系统中所有已挂载的设备
mount [-t 文件系统] 设备名 挂载点  //挂载 
如: mount /dev/sr0 /mnt/cdrom
unmount 设备文件名或挂载点  //卸载


>>Linux系统目录
.			当前目录
..			上级目录
-			上一次的工作目录
~			当前用户的家目录, root用户为/root, zhao用户为/home/zhao
/ 			根目录
/root 		root用户的家目录
/home 	 	普通用户的家目录, 如/home/zhao就是用户zhao的家目录
/bin 		二进制命令
/sbin 		超级用户可执行命令(系统管理命令)
*/usr 		系统软件资源(Unix Software Resource), 系统中安装的软件大多存放在这里
/usr/local 	编译方式安装程序的默认目录
/usr/src 	程序源码
/boot 		内核与系统引导程序
/dev 		设备文件
/etc 		配置文件
/lib 		共享库
/proc 		进程信息, 该目录中的数据保存在内存, 而不是硬盘
*/var 		动态数据保存位置, 如缓存、日志以及软件运行所产生的文件
/mnt		挂载目录, 可以在这个目录下建立子目录来挂载不同设备
/tmp 		临时文件的目录, 每次开机都可以清空


>>Linux运行级别
linux一共有7中运行级别, 其中常用的是以下几个: 
0: 关机;
3: 多用户模式;
5: 图形界面;
6: 重启;
init 数字  //切换运行级别


>>Linux命令之文件操作
*命令格式: 命令 [选项] [参数]
//文件夹与文件
1, ls 列出指定目录下所有子目录与子文件
-l 子文件的完整信息  //等价于 ll
-a 所有隐藏文件
-d 仅查看本目录自身的信息
-h 以人性化的方式显示, 如KB、MB
注: ls后可以跟多个参数同时查看多个目录;
2, cd 切换目录
~ 家目录
- 上次目录
. 当前目录
.. 上级目录
3, pwd 显示当前所在目录
4, mkdir 创建目录
-p 递归创建多级目录
5, rmdir 删除空目录
-p 递归删除多级目录
注: 该命令不常用, 一般删除目录和文件统一用rm命令;
6, touch 创建文件或者修改文件的访问时间
注: 另外两种方式也可以创建文件
vim test
echo 'hello' >> test 
7, rm 删除文件
-r 递归删除目录, 删除目录或文件都可以使用
-f 强制删除无需确认
注: rm -rf test/ 是删除整个test目录
而 rm -rf test/* 是删除test目录下的内容, test目录本身还在
8, cp 复制文件
-r 递归复制目录
注: cp demo /test/ 目标文件名也为demo
cp demo /test/demo1 指定目标文件名为demo1
注: 使用cp命令, 如果目标文件夹中有同名文件, 则会每个文件询问是否覆盖, 如忽略询问, 
则使用/cp;
9, mv 剪切文件或重命名文件
注: mv的使用同cp, 但是剪切或重命名目录不用加-r;
注: 如果目标路径与源路径在同一个目录, 则为重命名, 否则为剪切;
10, stat 查看文件的属性信息
11, cat 查看文件的内容
-n 显示行号
注: 该命令不适合查看大文件, 受屏幕的显示会显示不完整;
12, more 分屏显示文件内容
13, less 分行显示文件内容
14, head 显示文件的头部内容, 默认前10行
-n 20 或 -20 显示前20行
15, tail 显示文件的尾部信息, 默认后10行
-n 20 或 -20 显示后20行
-f 动态监听文件的新增内容
16, ln /src link 创建硬连接
-s 创建软连接
注: 软连接相当于快捷方式, 硬连接实际应用不多;
注: 创建软连接的源文件必须用绝对路径;


>>Linux命令之文件权限
1, 权限对于文件和目录的含义
文件:
r-可以读取文件内容
w-可以修改文件内容
x-可以执行文件
目录:
r-可以查看目录下有哪些子文件
w-可以对目录下的子文件本身进行操作
x-可以进入目录
注: 文件拥有w权限不可删除文件, 必须目录拥有w权限才可删除文件;
注: x是文件的最高权限, w是目录的最高权限;
2, chmod 修改文件权限
-R 递归修改目录下所有文件的权限
chmod u+w,g-w,o-x,a+r test
chmod g=rwx test
chmod 664 test
注: 数字权限最常用, r是4, w是2, x是1;
常见的数字权限有644和755, 禁止随意给文件赋777的权限;
注: 用户可以修改自己文件的权限;
3, chown 修改文件的所有者和所属组
-R 递归修改目录下所有文件的所有者和所属组
chown user1 test 
chown uset1:group1 test
注: 只有root用户才可以修改文件的所有者和所属组, 普通用户只可以修改自己文件的权限;
4, chgrp 修改文件的所属组
该命令完全可以用chown代替;


>>Linux命令之查找文件名
1, locate 根据文件名查找文件
快速定位文件所在目录, 该指令根据locate数据库进行搜索, 无需遍历整个文件系统, 所以速度很快;
2, find 功能强大的搜索文件的命令
格式: find 范围目录 [选项] 文件 
1)按文件名查找
-name 按文件名
-iname 不区分大小写
find . -name test
2)按文件大小查找
find . -size +12k  //+大于 -小于
3)按文件的时间查找
find . -atime/mtime/ctime -5  //5天内创建或修改的文件
4)按照权限查找
find . -perm 644
5)按照所有者和所属组查找
find . -user/group/nouser cjj  //nouser表示没有所有者, 比如外来的windows文件
6)按照文件类型查找
find . -type d/f/l  //目录/普通文件/软链接文件
7)逻辑运算查找
-a 逻辑与
-o 逻辑或
-not 逻辑非, 等价于 !
find . -size 2k -a -type f
find . -name zhao -o -name qian
find . -not -name zhao


>>Linux命令之查找文件内容
1, grep 查找文件内容, 使用正则匹配
grep [选项] '搜索内容' 文件名
-i 忽略大小写
-n 输出行号
grep -n '^a' test
egrep -n '[0-9]?$' test //等价于 grep -E
注: egrep是加强版的正则查找, 能识别所有的正则符号;


>>Linux命令之用户管理
1, 组
groupadd 组名  //添加组
groupdel 组名  //删除组
2, 用户 
useradd [-g 组名] 用户名 //创建用户
注: 如果省略组名, 则默认创建与用户名同名的组名;
passwd 用户名  //设置密码
userdel 用户名  //删除用户
usermod -g 组名 用户名  //修改用户所在的组
su - 用户名  //切换用户
注: 切换到root需要输入密码, 从root切换到普通用户则不需要;
logout/exit  //逐步退回到上次登录的用户
id 用户名  //查看指定用户的信息
whoami  //查看当前用户
/etc/passwd  //记录用户信息的文件
/etc/group  //记录组信息的文件


>>Linux命令之压缩与解压缩命令
1, Linux常见的压缩格式: .tar.gz、.tar.bz2、.tar(仅打包)、.gz(仅压缩)、.bz2(仅压缩)、.zip(兼容windows)等;
2, 不同格式文件的压缩命令
1).zip
zip [选项] 压缩包名 源文件或目录 //压缩
-r 压缩目录
注: 源文件可以指定多个, 以空格分隔;
unzip [选项] 压缩包名 //解压缩
-d 指定解压缩位置
unzip -d /tmp/ test.zip
注: 默认解压缩到当前目录
2).gz
gzip [选项] 源文件
-d 解压缩 //等价于gunzip
注: gzip不打包仅压缩, 所以不可用于多个文件或目录;
3).bz2
bzip2 [选项] 源文件 
-d 解压缩
注: 同gzip, bzip2也是不打包仅压缩;
4).tar
tar [选项] [-f 压缩包名] 源文件或目录 
tar -cvf test.tar demo1 demo2 demo3 //打包
tar -xvf test.tar //解包
注: tar命令只打包不压缩;
*5).tar.gz 和 .tar.bz2
最常用的, 打包并压缩;
tar [选项] 压缩包 源文件或目录 
-z 用于.tar.gz格式
-j 用于.tar.bz2格式
-c 打包 
-x 解包
-t 只查看, 不解压
-f 指定压缩包的文件名 
-v 显示打包过程 
-C 指定解压位置, 该选项必须放在压缩包后面, 否则会报错
tar -zcvf tmp.tar.gz /tmp  //把/tmp目录打包压缩为.tar.gz格式
tar -zxvd tmp.tar.gz  //解压并解包.tar.gz格式
tar -ztvf tmp.tar.gz  //只查看, 不解压 
tar -zxvf tmp.tar.gz -C /test  //解压到指定目录


>>Linux命令之其他命令
1, 帮助命令
man ls
info ls 
ls --help
2, 搜索系统命令的位置
whereis ls
which ls
3, sync 
将缓冲区的数据同步到硬盘
4, 关机和重启
shutdown [选项] 时间
-h 关机 
-r 重启
时间一般为now, 或具体时间;
5, who 
查看当前正在登录的用户信息
w 
跟who的作用一样, 显示更详细的信息
6, last 
查看所有登录过的用户信息, 包括正在登录和曾经登录过的
7, history
显示历史命令记录
history 10 //显示最近的10条历史记录
!10 //执行编号为10的历史指令
8, 日期时间
date //当前时间
date +%Y //年份
date "+%Y-%m-%d %H:%M:%S"
date -s "2020-11-03 20:02:10"  //设置时间
cal [选项] //日历


>>vim
1, vim的三种模式
一般模式(正常)、编辑模式、命令模式(末行);
注: 按i/a/o/I/A/O都可以进入编辑模式;
2, 一般模式下的操作
1)光标快速移动
gg 移动到文件头
shift+g 或 G 移动到文件尾
^ 移动到行首
$ 移动到行尾
:n 移动到第几行
2)一般模式下的剪切、粘贴、复制
u 撤销上一次修改
ctrl+r 反撤销
x 删除当前字母
dd 删除当前行
dG 从光标位置一直删到文件尾
yy 复制当前行
p 粘贴剪切板里的内容
3, 命令模式下的操作
1):q! 强制退出不保存
:wq! 保存后强制退出
:set nu/nonu 显示与取消行号
:set mouse-=a 让鼠标可以复制
2)查找和替换
?test 从光标所在位置往前查找
/test 从光标所在位置往后查找
n 下一个
N 上一个
:%s/old/new/g 替换整个文件的old为new, s表示替换, %代表整个文件
:1,10s/old/new/g 替换1到10行的old为new
:1,10s/^/#/g 注释1到10行
:1,10s/^#//g 取消注释


>>管道符
命令1 | 命令2 命令1的输出作为命令2的操作对象
ls -l /etc/ | more   //分屏显示内容
ls -l /etc/ | grep yum   //只显示文件名含yum的文件
netstat -tuln | grep :80  //查找端口号为80的服务
netstat -an | grep ESTABLISHED  //显示当前正在登录服务器的连接
注: 管道符的本质是文本流;


>>命令的别名和快捷键
1, alias 
alias  //显示所有别名
alias c123='grep -n 123 demo'  //给长命令创建别名
注: 在命令行中创建的别名, 只会在当前会话中生效;
2, 常用快捷键
TAB 补全命令或文件名
ctrl+C 强制终止当前命令
ctrl+L 清屏
ctrl+A 光标移动到命令开头
ctrl+E 光标移动到命令结尾
ctrl+U 剪切光标当前位置一直到命令开头的内容
ctrl+Y 粘贴ctrl+U剪切的内容


>>Linux进程、服务、网络
1, 进程命令
1)ps -aux
查看所有进程的信息, 如果要查看某个进程, 可以使用
ps -aux | grep xxx
2)ps -ef 
以全格式查看当前所有进程, 可以查看进程的父进程;
3)终止进程
kill [选项] 进程号
killall 进程名称  //进程名称支持通配符
注: 选项为 -9 表示强迫进程立即终止
4)pstree
pstree [选项]   //以树状形式查看进程
-p: 显示进程PID
-u:显示进程的所属用户
5)top
动态监控进程
2, 服务命令
1)service
service [start | stop | restart | status] 服务名
service管理的服务比较少, 更多的服务使用systemctl;
2)systemctl
//基本使用
systemctl [start | stop | restart | status] 服务名 
systemctl指令管理的服务在 /usr/lib/systemd/system 查看;
//设置服务的自启动
systemctl [enable | disable] 服务名 
systemctl is-enabled 服务名
systemctl list-unit-files //查看所有服务的开机启动状态
3)防火墙
firewall-cmd --permanent --add-port=端口号/协议
firewall-cmd --permanent --remove-port=端口号/协议
firewall-cmd --reload  //重新载入才能生效
firewall-cmd --query-port=端口/协议  //查看端口是否开放
3, 网络命令
1)ifconfig
查看ip信息
2)ping 
查看通信情况
3)netstat 
查看网络情况, 如开放的端口, 以及有哪些客户端连接;
-t 显示使用tcp协议端口的连接
-u 显示使用udp协议端口的连接
-l 仅显示监听状态的连接
-n 使用ip地址和端口号显示, 不使用域名与服务器
-a 列出所有网络状态
-p 显示pid和程序名
-r 显示路由表
注: 本地常用选项 -tuln, 或 -anp;
4)修改ip地址(改为固定ip)
vim /etc/sysconfig/network-scripts/ifcfg-ens33
BOOTPROTO="static"  //默认dhcp是动态分配
#IP地址
IPADDR=192.168.200.130
#网关
GATEWAY=192.168.200.2
#域名解析器
DNS1=192.168.200.2
然后重启网络服务;


>>安装包管理
1, rpm
1)rpm -qa 
查询所安装的所有rpm软件包
rpm -qa | more 
rpm -qa | grep xxx
2)rpm -q 软件包名
查询指定软件包是否安装
rpm -q firefox
3)rpm -ivh rpm包全路径名称
-i 安装 
-v 提示
-h 进度条
4)rpm -e rpm包的名称
卸载rmp包
rpm -e firefox 
2, yum
linux的在线软件包管理器, 基于rpm包管理, 可以自动下载并安装软件包;
1)yum list | grep xxx 
查询yum服务器是否有指定的软件
2)yum install xxx
下载安装软件包
注: rpm包需要先下载, 而yum是自动在线下载并安装;


>>Linux定时任务管理
1, crontab //周期性执行任务
1)crontab -l
查询当前有哪些任务调度;
2)crontab -e 
编辑crontab定时任务, 如 
*/1 * * * * echo 'hello' >> /home/cjj/text.txt
其中, *依次代表分、时、日、月、周几, 如: 
0 8,12,16 * * * 命令  //每天的8点0分, 12点0分, 16点0分
0 5 * * 1-6  //周一到周六的5点0分
*/n  //每隔n分钟
3)crontab -r 
删除当前用户的所有任务调度;
4)service crond restart 
重启任务调度;
2, at  //一次性执行任务
1)atq  
查看系统中还没执行的工作任务;
2)atrm 编号
删除已经设置的任务;
3)示例
at now +2 minutes 
at> date >> cao.txt  
//按ctrl+D结束命令


>>shell编程
1, .sh脚本的基本执行
脚本以#!/bin/bash开头;
如果以绝对路径或相对路径执行, 如 ./hello.sh, 需要给脚本文件赋可执行权限;
如果以sh的命令执行, 如 sh ./hello.sh, 则不需要;
2, shell的变量
1)系统变量
$HOME, $PATH, $USER等;
2)用户自定义变量
NAME=zhao  //定义变量
echo $NAME  //输出变量
unset NAME  //撤销变量
A=`date`  //反引号, 将命令的运行结果赋给变量
A=$(date)  //同上, 等价于反引号
3, 环境变量(全局变量)
export TOMCAT_HOME=/opt/tomcat/bin  //导出为全局变量, 使其在其他文件也可用
source /etc/profile  //让配置文件生效
echo $TOMCAT_HOME  //输出 
4, 命令行参数
./hello.sh zhao 32
$0 //命令本身
$1 //第1个参数
$# //所有参数的个数
5, 运算符
有以下几种方式:
$[运算式]: 如$[(2+3)*4]  //这种最常用
$((运算式)): 如$(((2+3)*4))
expr m - n







