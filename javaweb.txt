>>FreeMarker模板引擎
1, 模板引擎
模板+数据->模板引擎->展现结果
主流模板引擎: JSP, FreeMarker, Beetl;
freemarker文件以.ftl命名
2, JSP与FreeMarker的区别
JSP是官方标准，执行方式是编译型，执行效率高，开发效率低，扩展能力弱，数据提取用JSTL+EL;
FreeMarker不是官方标准，需要引入jar包，执行方式为解释型，执行效率低，开发效率高，扩展能力强，数据提取用内置标签;
3, 需要引入freemarker.jar包，eclipse会提示安装ftl编辑器，用于智能提示，不装也可以;
//主java文件: main()
//1，加载模板
Configuration config = new Configuration(Configuration.VERSION_2_3_28);  //创建核心配置对象
config.setClassForTemplateLoading(FreeMarkerSample.class, "");  //设置加载的目录
Template t = config.getTemplate("sample.ftl");  //得到模板对象
//2，创建数据
Map<String, Object> data = new HashMap<>();
data.put("site", "百度");
data.put("url", "http://www.baidu.com");
data.put("date", new Date());
data.put("number", 1234567.7654321);
data.put("leader", new Person("zhao", 40));
//3，产生输出
t.process(data, new OutputStreamWriter(System.out));
//模板文件: sample.ftl
${site}-${url}
4, ftl取值
${属性名}  //直接取值
${属性名!默认值}  //使用默认值，如${author!"张三"}
${属性名?string}  //格式化输出，如
	${date?string("yyyy-MM-dd HH:mm:ss SSS")},
	${number?string("0.00")},
	${leader.name}
string用于三目运算符:
${(words?index_of("o") != -1)?string("是", "不是")}
5, 条件判断
1)if
data.put("state", 1);
<#if state == 1>状态；正在使用
<#elseif state == 2>状态：闲置
<#else>状态：无效状态
</#if>
??代表判断对象是否为空，如果为空则不输出，如
<#if computer.user??>
用户：${computer.user}
</#if>
注: 在标签外引用变量用${}，在标签内直接使用变量名;
2)switch
<#switch state>
	<#case 1>正在使用<#break>
	<#case 2>闲置<#break>
	<#default>无效状态
</#switch>
6, 循环
1)列表
<#list datas as v>
	${v_index}-${v}
</#list>
注: 迭代变量_index代表索引;
2)Map
<#list datas?keys as k>
	${k}:${datas[k]}
</#list>
7, freemarker的内建函数
${words?length}  //长度
${words?index_of("o")}  //第一次出现的索引
${words?replace("o", "*")}  //全部替换
${words?upper_case/lower_case}  //大小写转换
${n?round/floor/ceiling} //四舍五入/向下取整/向上取整
${list?size}  //集合元素的个数
${list?first/last}  //集合的第一个元素/最后一个元素
${list?reverse}  //集合反转
${list?sort}  //集合排序
${list?sort_by("age")}  //集合元素按年龄排序
如 
<#list list?sort_by("age") as c>
	${c.name}-${c.age}
</#list>
8, freemarker与servlet整合
步骤:
1)新建Dynamic工程, 将freemarker.jar包放入WEB-INF/lib目录, 在WEB-INF目录下新建ftl文件夹,
以后的ftl文件都放在WEB-INF/ftl文件夹下;
2)配置web.xml
<servlet>
	<servlet-name>freemarker</servlet-name>
	<servlet-class>freemarker.ext.servlet.FreemarkerServlet</servlet-class>
	<init-param>
		<param-name>TemplatePath</param-name>
		<param-value>/WEB-INF/ftl</param-value>
	</init-param>
</servlet>
<servlet-mapping>
	<servlet-name>freemarker</servlet-name>
	<url-pattern>*.ftl</url-pattern>
</servlet-mapping>
3)写servlet与ftl文件
//ListServlet.java
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	List<Employee> list = new ArrayList<>();
	list.add(new Employee(1001, "张三", 32));
	list.add(new Employee(1002, "李四", 38));
	request.setAttribute("list", list);
	request.getRequestDispatcher("employee.ftl").forward(request, response);
}
//employee.ftl
<#list list as v>
<tr>
	<td>${v_index + 1}</td>
	<td>${v.empno?string("0")}</td>
	<td>${v.ename}</td>
	<td>${v.eage}</td>
</tr>
</#list>