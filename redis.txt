>>什么是redis
Redis是Key-Value型的NoSQL、内存型数据库; 
通常将实体信息、数据和页面的缓存信息等不太变动的信息存放到redis中, 提高读取速度;
1, redis是远程的
redis可以安装在服务端和客户端，一般指的是服务端的redis;
2, redis是基于内存的
redis的数据和结构都存于内存，所以速度非常快，而mysql是存于硬盘的;
3, redis是非关系型的数据库
关系型如mysql在使用前必须定义好数据字典，而redis不用;


>>redis的特点
1, 缓存
将常用的且不变的数据从mysql提取出来保存到redis中, 之后应用程序直接从redis中取数据;
2, 持久化
redis可以把数据定期持久化到硬盘中，这样就保证了数据的完整性;
3, 多种数据结构
4, 广泛的语言支持
5, 主从复制
6, 分布式与高可用


>>redis持久化策略
把数据持久化到硬盘, 当启动redis后可以从磁盘将数据加载到内存, 然后在内存中读取数据;
实现redis持久化策略有两种方式；
1)RDB(数据快照模式)
保存的是数据本身;
2)AOF(追加模式)
保存的是数据变更记录, 当服务器重新启动时, 会把所有的写操作重新执行一遍, 从而实现数据备份;


>>redis和nginx一样, 使用epoll的IO模型, 即非阻塞的多路复用;


>>redis默认端口: 6379


>>Linux环境安装redis
$ cd /usr/local
$ wget https://download.redis.io/releases/redis-6.2.6.tar.gz
$ tar xzf redis-6.2.6.tar.gz
$ cd redis-6.2.6
$ make
注: 第一次使用make命令需要先下载gcc编译器: yum install -y gcc;
Linux中启动redis服务器: 
./redis-6.2.6/src/redis-server [./redis-6.2.6/redis.conf]


>>Windows环境安装redis
redis官网没有提供windows的下载版本, 需要上github下载, 直接下载zip压缩文件;
windows中启动redis服务器: 点击 redis-server.exe;


>>通过客户端操作redis
1, Linux
./redis-6.2.6/src/redis-cli [-h 127.0.0.1] [-p 6379]
2, Windows
点击 redis-cli.exe;
注: 通过客户端操作redis需要先启动redis服务器;
通过客户端关闭redis服务: ./src/redis-cli shutdown;
在操作具体数据之前, 使用 select n 选择数据库;


>>redis数据类型
redis中的数据都是按 key-value 来存储的;
实际应用中大多使用String类型, 因为对象也可以序列化为JSON串保存为String;
1, String
value的值为字符串, 字符串、整数、浮点数都属于字符串;
select 0  //选择0号数据库
set name zhao  //设置 name 的值为 zhao
set name zhao nx  //只有当name不存在时才创建
set name zhao xx  //只有当name存在时才修改
get name  //获取 name 的值
strlen name  //name的值的长度
mset name zhao age 30  //一次设置多个值
mget name age  //一次获取多个值
keys he*  //查询符合条件的key, 使用 keys * 查看所有的key
dbsize  //返回key的个数
exists a  //返回 key=a 是否存在
del a  //删除 key=a 的数据
expire hello 20  //设置 key=hello 20秒后过期
ttl hello  //查看 key=hello 的过期剩余时间
incr/decr count  //count值自增/自减
incrby/decrby count 10  //自增/自减指定步长
setbit k1 2 1  //00100000  //strlen k1 : 1
setbit k1 9 1  //00100000 01000000  //strlen k1 : 2
注: 这是bitmap类型, 占用空间小, 实际开发中有时非常有用;
bitmap的应用场景:
1)统计某个用户在指定窗口时间内的登录天数;
2)统计某段时间有多少活跃用户;
2, Hash
用于存储结构化数据, 如 emp:1 -> {name: "zhao", age: 30, city: "hefei"};
与String不同, Hash的value为结构化数据;
hset emp:1 name zhao  //设置1号员工的name值
hget emp:1 name  //获取1号员工的name值
hmset emp:1 name zhao age 30  //一次设置1号员工的多个值 
hmget emp:1 name age / hgetall emp:1  //一次获取1号员工的多个值 / 获取1号员工的所有值
hdel emp:1 age  //删除1号员工的age
hexists emp:1 age  //返回1号员工的age是否存在
hlen emp:1  //返回1号员工有多少个属性值
注: hdel emp:1 age 是删除1号员工的age属性, 而 del emp:1 是删除整个1号员工;
当把emp:1中所有属性都删除, 那么emp:1这个key也自动移除;
3, List
value的值为列表, 如 mylist -> {d, e, f, c, b, a};
rpush mylist c b a  //右侧插入
lpush mylist f e d  //左侧插入
rpop mylist  //右侧弹出
lpop mylist  //左侧弹出
lrange mylist 0 -1  //输出列表中所有元素
llen mylist  //列表中元素个数
4, Set
value的值为集合, 与List不同, 集合的元素无序且唯一;
sadd myset a b a c  //给集合添加元素
smembers  //查看集合中所有元素
sinter set1 set2  //交集
sunion set1 set2  //并集
sdiff set1 set2  //差集
sismember myset a  //判断元素是否在集合中
5, Zset(Sort Set, 有序集合)
value的值为有序集合, 其中的元素由权和值来表示;
zadd myzset 20 a 10 b 30 c  //给有序集合添加元素
zrange myzset 0 -1 [withscores]  //查看有序集合中所有元素, 可选的withscores表示显示权
zrangebyscore myzset 10 20  //查看权在指定区间的元素


>>redis常用配置
daemonize yes  //让redis以守护进程的方式在后台运行, 默认为no
port 6379  //默认端口号
logfile ""  //日志文件, 保存redis底层的输出信息; 例如设置成 "redis.log", 那么原来输出到cmd中的信息就会保存到redis.log中;
databases 16  //默认容量16个数据库(0-15), redis数据库的名称就是0-15中的数字, 通过 select n 来切换数据库;
requirepass 12345  //设置redis的密码, 默认该项禁止; 在客户端通过密码认证: auth 12345;
dir ./   //数据文件的保存目录, 数据持久化, dump.rdb 就是保存在硬盘的备份文件;
protected-mode yes  //保护模式, 默认为yes, 如果其他主机需要连接redis, 需要修改该参数为no;
bind 127.0.0.1  //可以访问redis的主机ip, 默认为仅本机可访问, 修改为 0.0.0.0 表示所有主机都可访问;











