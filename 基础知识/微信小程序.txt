>>小程序的特点
无需安装即可使用;
与app相比，小程序的开发成本低、开发周期短、升级维护简单、推广成本低;

>>小程序代码构成
1, JSON--用于配置, 包括项目配置、全局配置、页面配置;
project.config.json: 项目配置;
app.json: 全局配置;
page.json: 页面配置;
2, WXML--相当于html, 模板文件，描述页面结构;
3, WXSS--相当于css, 描述样式;
4, JS--脚本文件;

>>注册AppID
cao: wx51432e378de2309c
hu: wxf9e9ed1cea3b83f9
云开发环境名称: hucloud
云ID: hucloud-mhcgj

>>微信开发者工具打不开的解决方案
cmd运行: D:\微信web开发者工具 > 微信开发者工具.exe --disable-gpu
因为新版本默认开启了gpu加速, 所以--disable-gpu就可以了;

>>WXML常用标签
1, <view></view>
输出文本
2, 列表渲染
<view wx:for="{{arr}} wx:key="{{index}}">
	{{index}} {{item.name}} {{item.age}}
</view>
默认的，index对应索引，item对应值;
3, 条件渲染
1)<view wx:if="{{v1}}">
	//output1
</view>
<view wx:elif="{{v2}}">
	//output2
</view>
<view wx:else="{{v3}}">
	//output3
</view>
2)<view hidden="{{v1}}">
	//output
</view>
注: 如果需要频繁切换的话，用hidden更好;

>>WXSS常用样式
1, 尺寸单位: px和rpx, rpx可以根据屏幕宽度自适应, 规定所有手机的宽度都是750rpx;
2, 引入外部wxss
@import './test.wxss'
3, 第三方样式库
WeUI;
iView Weapp;
Vant Weapp;

>>JS脚本
1, 绑定点击事件
//base.wxml
<button bindtap="tapFn" data-id="myID">点我加1</button>
<view>{{count}}</view>
//base.js
tapFn: function(e){
	this.setData({
		count: this.data.count + 1
	});
	console.log(e.target.dataset.id);
}
注:
1)绑定点击事件可以写成bindtap, 也可以写成bind:tap;
2)标准属性: 标签上定义的id属性可以通过 e.target.id 取到;
3)用户自定义属性: 而标签上定义的data-id属性可以通过 e.target.dataset.id 取到;
2, 绑定事件的方法: bind vs catch
bind绑定的事件会冒泡, 而catch不会冒泡;

>>云开发
将服务端的部署和运营托管到腾讯云，云开发包括云函数、云数据库和云存储;
小程序的云函数用的是nodejs, 云数据库用的是mongoDB;
小程序传统开发模式: 开发效率低, 运维成本高;
云开发模式: serverless(无服务模式，即无需关注服务端的部署), 开发者更关注业务逻辑;

>>云数据库
云开发提供了一个JSON数据库，2GB免费存储空间;
1, 文档型数据库 vs 关系型数据库
数据库database -- 数据库database
集合collection -- 表table
记录record/doc -- 行row
字段field -- 列column
关系型数据库更适合多表之间的关联操作，文档型数据库更适合频繁的读写操作;
2, 数据类型
String: 字符串
Number: 数字
Bool: 布尔值
Null: 空
Object: 对象
Array: 数组
Date: 时间
GeoPoint: 地理位置点
3, 操作云数据库的方式
1)小程序控制(权限受控)
2)云函数控制(完全权限)
3)控制台控制(完全权限)
4, 操作云数据库
1)打开数据库
//初始化
const db = wx.cloud.database();
//切换环境
const testDB = wx.cloud.database({
	env: 'test'
});
2)插入数据
db.collection('test').add({
	data: {
		name: 'zhao',
		age: 30
	}
}, success: res=>{ //成功时的回调函数
	console.log(res);
}, fail: err=>{ //失败时的回调函数
	console.log(err);
});
也可写成:
db.collection('test').add({
	data: {
		name: 'qian',
		age: 32
	}
}).then(res=>{ //成功则执行then()
	console.log(res);
}).catch(err=>{ //失败则执行catch()
	console.log(err);
});
3)更新数据
db.collection('test').doc('982133855eb8ecfb007a07644a81c7dc').update({
	date: {
		age: 80
	}
});
4)删除数据
db.collection('test').doc('982133855eb8ecfb007a07644a81c7dc').remove();
5)查询数据
db.collection('test').where({
	name: 'qian'
}).get().then(res=>{
	console.log(res);
});

>>云函数
云函数就是运行在服务端的后台代码;
步骤:
1)在cloudfunctions下增加函数文件夹，以函数名命名;
//cloudfunctions/sum/index.js
exports.main = async(event, context)=>{
	return {
		sum: event.a + event.b
	}
}
2)小程序端调用云函数
//pages/cloud/cloud.js
sumFn: function(){
	wx.cloud.callFunction({
		name: 'sum',
		data: {
			a: 2,
			b: 3
		}
	}).then(res=>{
		console.log(res);
	});
}

>>云存储
1, 上传图片
选择图片或拍照->上传所选图片->返回fileID->fileID存储到云数据库;
//选择图片
wx.chooseImage({
  count: 1,
  sizeType: ['original', 'compressed'],
  sourceType: ['album', 'camera'],
  success (res) {
	// tempFilePath可以作为img标签的src属性显示图片
	const tempFilePaths = res.tempFilePaths
	console.log(tempFilePaths);
	//上传图片
	wx.cloud.uploadFile({
	  cloudPath: 'example.png', // 上传至云端的路径
	  filePath: tempFilePaths[0], // 小程序临时文件路径
	  success: res => {
		// 返回文件 ID
		console.log(res.fileID)
		//fileID存储到云数据库
		db.collection('image').add({
		  data: {
			fileID: res.fileID
		  }
		}).then(res=>{
		  console.log(res);
		}).catch(err=>{
		  console.log(err);
		});
	  },
	  fail: console.error
	})
  }
})
2, 显示图片
//查询当前用户的openid
wx.cloud.callFunction({
  name: 'login'
}).then(res=>{ //查询数据库
  db.collection('image').where({
	_openid: res.result.openid
  }).get().then(res2=>{
	console.log(res2);
	//保存查询到的数据
	this.setData({
	  images: res2.data
	})
  })
})
//前台展示
<block wx:for="{{images}}">
  <image src="{{item.fileID}}"></image>
  <button size="mini" data-fileid="{{item.fileID}}" bind:tap="downloadFile">下载</button>
</block>
3, 下载图片
wx.cloud.downloadFile({
  fileID: e.target.dataset.fileid, // 文件 ID
  success: res => {
	// 返回临时文件路径
	console.log(res.tempFilePath)
	//保存图片到手机相册
	wx.saveImageToPhotosAlbum({
	  filePath: res.tempFilePath,
	  success(res) { 
		wx.showToast({
		  title: '保存成功',
		})
	  }
	})
  },
  fail: console.error
})



