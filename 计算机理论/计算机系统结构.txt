>>计算机发展的基础
1，理论基础--图灵机模型
2，结构基础--冯诺依曼结构
3，物质基础--摩尔定律

>>加快经常性事件
是提高计算机性能的主要途径，举例：
1，RISC系统中，用较少的指令集来实现经常使用的功能，不经常使用的指令改用软件实现；
2，局部性原理：将局部代码放到缓存，使缓存的速度与处理器的速度匹配；

>>程序执行时间
程序执行时间=编译后的指令数*每条指令所需的时钟周期数(CPI)*时钟周期

>>并行处理
1，从数据处理的角度
字串位串->字串位并->字并位串->字并位并；
2，从程序执行的角度
指令内并行->指令级并行->线程级并行->进程级并行->程序级并行；

>>计算机系统的评价
性能、成本、能耗、可靠性；

>>指令系统(ISA)
1，指令系统是一台计算机能够识别并执行的机器指令的集合；
2，软硬件分界面
指令系统是软硬件的接口，一个应用从上到下分为：
应用程序->编程语言->操作系统->指令系统->微体系结构->功能部件->元器件及电路；
3，使用不同指令系统的软件不兼容，相同指令系统其底层硬件实现可以不同；
4，分类
1)复杂指令集(CISC)
指令多，硬件复杂，不利于使用流水线技术，但软件编程简单。如x86系统；
2)精简指令集(RISC)
只有常用的指令，指令格式统一，硬件简单，有利于流水线技术，但软件编程稍复杂。如手机的arm系统；

>>流水线技术
1，适用场景
适用于密集到达的相同的任务场景，如5段指令流水线：取值、译码、执行、访存、回写；
2，流水线的特点
1)流水线不能减少(一般是增加)单条指令的执行时间，但却能提高吞吐率；
2)增加流水线的深度可以提高系统的性能，但性能受限于流水线中执行时间最长的段(瓶颈段)；
3)流水线的深度受限于流水线的额外开销；
3，流水线冲突
1)结构冲突
因硬件资源满足不了指令重叠执行的要求而发生的冲突；
解决方案：
一)增加硬件资源份数；
二)插入暂停周期，使冲突的指令往后移一段或若干段；
2)数据冲突
指令在流水线中重叠执行时因需要用到前面指令的执行结果而发生的冲突；
解决方案：对流水线重新调度；
3)控制冲突
流水线遇到分支指令或其他会改变PC值的指令而引起的冲突；
















